#!/usr/bin/env python3
#
# Copyright John Allsup 2015
# Released under the GNU General Public License v3
# See file LICENSE

import sys

#  Initial version
#args = sys.argv[1:4]
#s = slice(*map(int,args))
#a = sys.stdin.readlines()
#b = a[s]
#print("".join(b),end="")

# Becomes the following one-liner

# The following one-liner nicely wraps the python slice() constructor
#print("".join(sys.stdin.readlines()[slice(*map(int,sys.argv[1:4]))]),end="")

# This does slightly more:
# First it reads in the lines, 
a = sys.stdin.readlines()
# storing the number of lines as n in a dictionary
d = {'n':len(a)}
# it takes the first argument, saves it as 'a',
# then takes the second, evaluates it with 'a' already defined,
# then if there is a third, evaluates that with 'a' and 'b' defined
# converts the lot to ints and then throws it to slice.
# This means one can do things like
#    plines n-10 a+3
# to extract the first three lines of the last 10 of input

args = sys.argv[1:4]
try:
    if len(args) > 0: d['a'] = int(eval(args[0],d))
    else: d['a'] = None
    if len(args) > 1: d['b'] = int(eval(args[1],d))
    else: d['b'] = None
    if len(args) > 2: d['c'] = int(eval(args[2],d))
    else: d['c'] = None
    s = slice(d['a'],d['b'],d['c'])
except BaseException as e:
    print("Exception: {}".format(e))
print("".join(a[s]),end="")

